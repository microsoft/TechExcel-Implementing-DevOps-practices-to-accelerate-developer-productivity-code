# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

env:
  registryName: qo3zstjgutwp2mpnpreg.azurecr.io
  repositoryName: techboost/dotnetcoreapp
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}
  prefix: qo3zstjgutwp2
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj

  buildImageAndPush:
     runs-on: ubuntu-latest
     needs: build
     steps:
     - uses: actions/checkout@v3
     - name: Docker Login
       # You may pin to the exact commit or the version.
       # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
       uses: docker/login-action@v3.0.0
       with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ACR_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Log out from the Docker registry at the end of a job
        logout: true
     
     - name: Docker Build         
       run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath

     - name: Docker Push
       run: docker push $registryName/$repositoryName:$tag
       
  deploy_to_dev:
    runs-on: ubuntu-latest
    needs: buildImageAndPush
    environment:
      name: dev
      url: https://${{ env.prefix }}-dev.azurewebsites.net/
    
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name : 'Deploy App to Dev'
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.prefix }}-dev
          images: $registryName/$repositoryName:$tag
          
